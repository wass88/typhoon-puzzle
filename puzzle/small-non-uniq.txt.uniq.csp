; 2 _ _ 1
; _ _ _ _
; _ _ _ _
; _ _ _ 1
; 3 numbers
; Area variables
(int a_0_0 1 3)
(int a_0_1 1 3)
(int a_0_2 1 3)
(int a_0_3 1 3)
(int a_1_0 1 3)
(int a_1_1 1 3)
(int a_1_2 1 3)
(int a_1_3 1 3)
(int a_2_0 1 3)
(int a_2_1 1 3)
(int a_2_2 1 3)
(int a_2_3 1 3)
(int a_3_0 1 3)
(int a_3_1 1 3)
(int a_3_2 1 3)
(int a_3_3 1 3)
; Turn variables (0: straight, 1: right turn, 2: start, 3: end)
(int t_0_0 0 3)
(int t_0_1 0 3)
(int t_0_2 0 3)
(int t_0_3 0 3)
(int t_1_0 0 3)
(int t_1_1 0 3)
(int t_1_2 0 3)
(int t_1_3 0 3)
(int t_2_0 0 3)
(int t_2_1 0 3)
(int t_2_2 0 3)
(int t_2_3 0 3)
(int t_3_0 0 3)
(int t_3_1 0 3)
(int t_3_2 0 3)
(int t_3_3 0 3)
; Path variables
(int py_0_0 -1 1)
(int py_0_1 -1 1)
(int py_0_2 -1 1)
(int py_0_3 -1 1)
(int py_1_0 -1 1)
(int py_1_1 -1 1)
(int py_1_2 -1 1)
(int py_1_3 -1 1)
(int py_2_0 -1 1)
(int py_2_1 -1 1)
(int py_2_2 -1 1)
(int py_2_3 -1 1)
(int px_0_0 -1 1)
(int px_0_1 -1 1)
(int px_0_2 -1 1)
(int px_1_0 -1 1)
(int px_1_1 -1 1)
(int px_1_2 -1 1)
(int px_2_0 -1 1)
(int px_2_1 -1 1)
(int px_2_2 -1 1)
(int px_3_0 -1 1)
(int px_3_1 -1 1)
(int px_3_2 -1 1)
; Start constraints (t=2)
(and (= a_0_0 1) (= t_0_0 2))
(and (= a_0_3 2) (= t_0_3 2))
(and (= a_3_3 3) (= t_3_3 2))
(!= t_0_1 2)
(!= t_0_2 2)
(!= t_1_0 2)
(!= t_1_1 2)
(!= t_1_2 2)
(!= t_1_3 2)
(!= t_2_0 2)
(!= t_2_1 2)
(!= t_2_2 2)
(!= t_2_3 2)
(!= t_3_0 2)
(!= t_3_1 2)
(!= t_3_2 2)
; start of path (t=2)
(imp (= t_0_0 2) (and (= (+ py_0_0 px_0_0) 1) (= (+ (abs py_0_0) (abs px_0_0)) 1)))
(imp (= t_0_1 2) (and (= (+ py_0_1 (- px_0_0) px_0_1) 1) (= (+ (abs py_0_1) (abs px_0_0) (abs px_0_1)) 1)))
(imp (= t_0_2 2) (and (= (+ py_0_2 (- px_0_1) px_0_2) 1) (= (+ (abs py_0_2) (abs px_0_1) (abs px_0_2)) 1)))
(imp (= t_0_3 2) (and (= (+ py_0_3 (- px_0_2)) 1) (= (+ (abs py_0_3) (abs px_0_2)) 1)))
(imp (= t_1_0 2) (and (= (+ (- py_0_0) py_1_0 px_1_0) 1) (= (+ (abs py_0_0) (abs py_1_0) (abs px_1_0)) 1)))
(imp (= t_1_1 2) (and (= (+ (- py_0_1) py_1_1 (- px_1_0) px_1_1) 1) (= (+ (abs py_0_1) (abs py_1_1) (abs px_1_0) (abs px_1_1)) 1)))
(imp (= t_1_2 2) (and (= (+ (- py_0_2) py_1_2 (- px_1_1) px_1_2) 1) (= (+ (abs py_0_2) (abs py_1_2) (abs px_1_1) (abs px_1_2)) 1)))
(imp (= t_1_3 2) (and (= (+ (- py_0_3) py_1_3 (- px_1_2)) 1) (= (+ (abs py_0_3) (abs py_1_3) (abs px_1_2)) 1)))
(imp (= t_2_0 2) (and (= (+ (- py_1_0) py_2_0 px_2_0) 1) (= (+ (abs py_1_0) (abs py_2_0) (abs px_2_0)) 1)))
(imp (= t_2_1 2) (and (= (+ (- py_1_1) py_2_1 (- px_2_0) px_2_1) 1) (= (+ (abs py_1_1) (abs py_2_1) (abs px_2_0) (abs px_2_1)) 1)))
(imp (= t_2_2 2) (and (= (+ (- py_1_2) py_2_2 (- px_2_1) px_2_2) 1) (= (+ (abs py_1_2) (abs py_2_2) (abs px_2_1) (abs px_2_2)) 1)))
(imp (= t_2_3 2) (and (= (+ (- py_1_3) py_2_3 (- px_2_2)) 1) (= (+ (abs py_1_3) (abs py_2_3) (abs px_2_2)) 1)))
(imp (= t_3_0 2) (and (= (+ (- py_2_0) px_3_0) 1) (= (+ (abs py_2_0) (abs px_3_0)) 1)))
(imp (= t_3_1 2) (and (= (+ (- py_2_1) (- px_3_0) px_3_1) 1) (= (+ (abs py_2_1) (abs px_3_0) (abs px_3_1)) 1)))
(imp (= t_3_2 2) (and (= (+ (- py_2_2) (- px_3_1) px_3_2) 1) (= (+ (abs py_2_2) (abs px_3_1) (abs px_3_2)) 1)))
(imp (= t_3_3 2) (and (= (+ (- py_2_3) (- px_3_2)) 1) (= (+ (abs py_2_3) (abs px_3_2)) 1)))
; end of path (t=3)
(imp (= t_0_0 3) (and (= (+ py_0_0 px_0_0) -1) (= (+ (abs py_0_0) (abs px_0_0)) 1)))
(imp (= t_0_1 3) (and (= (+ py_0_1 (- px_0_0) px_0_1) -1) (= (+ (abs py_0_1) (abs px_0_0) (abs px_0_1)) 1)))
(imp (= t_0_2 3) (and (= (+ py_0_2 (- px_0_1) px_0_2) -1) (= (+ (abs py_0_2) (abs px_0_1) (abs px_0_2)) 1)))
(imp (= t_0_3 3) (and (= (+ py_0_3 (- px_0_2)) -1) (= (+ (abs py_0_3) (abs px_0_2)) 1)))
(imp (= t_1_0 3) (and (= (+ (- py_0_0) py_1_0 px_1_0) -1) (= (+ (abs py_0_0) (abs py_1_0) (abs px_1_0)) 1)))
(imp (= t_1_1 3) (and (= (+ (- py_0_1) py_1_1 (- px_1_0) px_1_1) -1) (= (+ (abs py_0_1) (abs py_1_1) (abs px_1_0) (abs px_1_1)) 1)))
(imp (= t_1_2 3) (and (= (+ (- py_0_2) py_1_2 (- px_1_1) px_1_2) -1) (= (+ (abs py_0_2) (abs py_1_2) (abs px_1_1) (abs px_1_2)) 1)))
(imp (= t_1_3 3) (and (= (+ (- py_0_3) py_1_3 (- px_1_2)) -1) (= (+ (abs py_0_3) (abs py_1_3) (abs px_1_2)) 1)))
(imp (= t_2_0 3) (and (= (+ (- py_1_0) py_2_0 px_2_0) -1) (= (+ (abs py_1_0) (abs py_2_0) (abs px_2_0)) 1)))
(imp (= t_2_1 3) (and (= (+ (- py_1_1) py_2_1 (- px_2_0) px_2_1) -1) (= (+ (abs py_1_1) (abs py_2_1) (abs px_2_0) (abs px_2_1)) 1)))
(imp (= t_2_2 3) (and (= (+ (- py_1_2) py_2_2 (- px_2_1) px_2_2) -1) (= (+ (abs py_1_2) (abs py_2_2) (abs px_2_1) (abs px_2_2)) 1)))
(imp (= t_2_3 3) (and (= (+ (- py_1_3) py_2_3 (- px_2_2)) -1) (= (+ (abs py_1_3) (abs py_2_3) (abs px_2_2)) 1)))
(imp (= t_3_0 3) (and (= (+ (- py_2_0) px_3_0) -1) (= (+ (abs py_2_0) (abs px_3_0)) 1)))
(imp (= t_3_1 3) (and (= (+ (- py_2_1) (- px_3_0) px_3_1) -1) (= (+ (abs py_2_1) (abs px_3_0) (abs px_3_1)) 1)))
(imp (= t_3_2 3) (and (= (+ (- py_2_2) (- px_3_1) px_3_2) -1) (= (+ (abs py_2_2) (abs px_3_1) (abs px_3_2)) 1)))
(imp (= t_3_3 3) (and (= (+ (- py_2_3) (- px_3_2)) -1) (= (+ (abs py_2_3) (abs px_3_2)) 1)))
; Area has only one end (t=3)
(= (+ (if (and (= a_0_0 1) (= t_0_0 3)) 1 0)(if (and (= a_0_1 1) (= t_0_1 3)) 1 0)(if (and (= a_0_2 1) (= t_0_2 3)) 1 0)(if (and (= a_0_3 1) (= t_0_3 3)) 1 0)(if (and (= a_1_0 1) (= t_1_0 3)) 1 0)(if (and (= a_1_1 1) (= t_1_1 3)) 1 0)(if (and (= a_1_2 1) (= t_1_2 3)) 1 0)(if (and (= a_1_3 1) (= t_1_3 3)) 1 0)(if (and (= a_2_0 1) (= t_2_0 3)) 1 0)(if (and (= a_2_1 1) (= t_2_1 3)) 1 0)(if (and (= a_2_2 1) (= t_2_2 3)) 1 0)(if (and (= a_2_3 1) (= t_2_3 3)) 1 0)(if (and (= a_3_0 1) (= t_3_0 3)) 1 0)(if (and (= a_3_1 1) (= t_3_1 3)) 1 0)(if (and (= a_3_2 1) (= t_3_2 3)) 1 0)(if (and (= a_3_3 1) (= t_3_3 3)) 1 0)) 1)
(= (+ (if (and (= a_0_0 2) (= t_0_0 3)) 1 0)(if (and (= a_0_1 2) (= t_0_1 3)) 1 0)(if (and (= a_0_2 2) (= t_0_2 3)) 1 0)(if (and (= a_0_3 2) (= t_0_3 3)) 1 0)(if (and (= a_1_0 2) (= t_1_0 3)) 1 0)(if (and (= a_1_1 2) (= t_1_1 3)) 1 0)(if (and (= a_1_2 2) (= t_1_2 3)) 1 0)(if (and (= a_1_3 2) (= t_1_3 3)) 1 0)(if (and (= a_2_0 2) (= t_2_0 3)) 1 0)(if (and (= a_2_1 2) (= t_2_1 3)) 1 0)(if (and (= a_2_2 2) (= t_2_2 3)) 1 0)(if (and (= a_2_3 2) (= t_2_3 3)) 1 0)(if (and (= a_3_0 2) (= t_3_0 3)) 1 0)(if (and (= a_3_1 2) (= t_3_1 3)) 1 0)(if (and (= a_3_2 2) (= t_3_2 3)) 1 0)(if (and (= a_3_3 2) (= t_3_3 3)) 1 0)) 1)
(= (+ (if (and (= a_0_0 3) (= t_0_0 3)) 1 0)(if (and (= a_0_1 3) (= t_0_1 3)) 1 0)(if (and (= a_0_2 3) (= t_0_2 3)) 1 0)(if (and (= a_0_3 3) (= t_0_3 3)) 1 0)(if (and (= a_1_0 3) (= t_1_0 3)) 1 0)(if (and (= a_1_1 3) (= t_1_1 3)) 1 0)(if (and (= a_1_2 3) (= t_1_2 3)) 1 0)(if (and (= a_1_3 3) (= t_1_3 3)) 1 0)(if (and (= a_2_0 3) (= t_2_0 3)) 1 0)(if (and (= a_2_1 3) (= t_2_1 3)) 1 0)(if (and (= a_2_2 3) (= t_2_2 3)) 1 0)(if (and (= a_2_3 3) (= t_2_3 3)) 1 0)(if (and (= a_3_0 3) (= t_3_0 3)) 1 0)(if (and (= a_3_1 3) (= t_3_1 3)) 1 0)(if (and (= a_3_2 3) (= t_3_2 3)) 1 0)(if (and (= a_3_3 3) (= t_3_3 3)) 1 0)) 1)
; Count Turn right (t=1)
(= (+ (if (and (= a_0_0 1) (= t_0_0 1)) 1 0)(if (and (= a_0_1 1) (= t_0_1 1)) 1 0)(if (and (= a_0_2 1) (= t_0_2 1)) 1 0)(if (and (= a_0_3 1) (= t_0_3 1)) 1 0)(if (and (= a_1_0 1) (= t_1_0 1)) 1 0)(if (and (= a_1_1 1) (= t_1_1 1)) 1 0)(if (and (= a_1_2 1) (= t_1_2 1)) 1 0)(if (and (= a_1_3 1) (= t_1_3 1)) 1 0)(if (and (= a_2_0 1) (= t_2_0 1)) 1 0)(if (and (= a_2_1 1) (= t_2_1 1)) 1 0)(if (and (= a_2_2 1) (= t_2_2 1)) 1 0)(if (and (= a_2_3 1) (= t_2_3 1)) 1 0)(if (and (= a_3_0 1) (= t_3_0 1)) 1 0)(if (and (= a_3_1 1) (= t_3_1 1)) 1 0)(if (and (= a_3_2 1) (= t_3_2 1)) 1 0)(if (and (= a_3_3 1) (= t_3_3 1)) 1 0)) 2)
(= (+ (if (and (= a_0_0 2) (= t_0_0 1)) 1 0)(if (and (= a_0_1 2) (= t_0_1 1)) 1 0)(if (and (= a_0_2 2) (= t_0_2 1)) 1 0)(if (and (= a_0_3 2) (= t_0_3 1)) 1 0)(if (and (= a_1_0 2) (= t_1_0 1)) 1 0)(if (and (= a_1_1 2) (= t_1_1 1)) 1 0)(if (and (= a_1_2 2) (= t_1_2 1)) 1 0)(if (and (= a_1_3 2) (= t_1_3 1)) 1 0)(if (and (= a_2_0 2) (= t_2_0 1)) 1 0)(if (and (= a_2_1 2) (= t_2_1 1)) 1 0)(if (and (= a_2_2 2) (= t_2_2 1)) 1 0)(if (and (= a_2_3 2) (= t_2_3 1)) 1 0)(if (and (= a_3_0 2) (= t_3_0 1)) 1 0)(if (and (= a_3_1 2) (= t_3_1 1)) 1 0)(if (and (= a_3_2 2) (= t_3_2 1)) 1 0)(if (and (= a_3_3 2) (= t_3_3 1)) 1 0)) 1)
(= (+ (if (and (= a_0_0 3) (= t_0_0 1)) 1 0)(if (and (= a_0_1 3) (= t_0_1 1)) 1 0)(if (and (= a_0_2 3) (= t_0_2 1)) 1 0)(if (and (= a_0_3 3) (= t_0_3 1)) 1 0)(if (and (= a_1_0 3) (= t_1_0 1)) 1 0)(if (and (= a_1_1 3) (= t_1_1 1)) 1 0)(if (and (= a_1_2 3) (= t_1_2 1)) 1 0)(if (and (= a_1_3 3) (= t_1_3 1)) 1 0)(if (and (= a_2_0 3) (= t_2_0 1)) 1 0)(if (and (= a_2_1 3) (= t_2_1 1)) 1 0)(if (and (= a_2_2 3) (= t_2_2 1)) 1 0)(if (and (= a_2_3 3) (= t_2_3 1)) 1 0)(if (and (= a_3_0 3) (= t_3_0 1)) 1 0)(if (and (= a_3_1 3) (= t_3_1 1)) 1 0)(if (and (= a_3_2 3) (= t_3_2 1)) 1 0)(if (and (= a_3_3 3) (= t_3_3 1)) 1 0)) 1)
; Straight constraints (t=0)
(imp (= t_0_0 0) (and (= (+ (abs py_0_0) (abs px_0_0)) 2) (or )))
(imp (= t_0_1 0) (and (= (+ (abs py_0_1) (abs px_0_0) (abs px_0_1)) 2) (or (= (* px_0_0 px_0_1) 1))))
(imp (= t_0_2 0) (and (= (+ (abs py_0_2) (abs px_0_1) (abs px_0_2)) 2) (or (= (* px_0_1 px_0_2) 1))))
(imp (= t_0_3 0) (and (= (+ (abs py_0_3) (abs px_0_2)) 2) (or )))
(imp (= t_1_0 0) (and (= (+ (abs py_0_0) (abs py_1_0) (abs px_1_0)) 2) (or (= (* py_0_0 py_1_0) 1))))
(imp (= t_1_1 0) (and (= (+ (abs py_0_1) (abs py_1_1) (abs px_1_0) (abs px_1_1)) 2) (or (= (* py_0_1 py_1_1) 1)(= (* px_1_0 px_1_1) 1))))
(imp (= t_1_2 0) (and (= (+ (abs py_0_2) (abs py_1_2) (abs px_1_1) (abs px_1_2)) 2) (or (= (* py_0_2 py_1_2) 1)(= (* px_1_1 px_1_2) 1))))
(imp (= t_1_3 0) (and (= (+ (abs py_0_3) (abs py_1_3) (abs px_1_2)) 2) (or (= (* py_0_3 py_1_3) 1))))
(imp (= t_2_0 0) (and (= (+ (abs py_1_0) (abs py_2_0) (abs px_2_0)) 2) (or (= (* py_1_0 py_2_0) 1))))
(imp (= t_2_1 0) (and (= (+ (abs py_1_1) (abs py_2_1) (abs px_2_0) (abs px_2_1)) 2) (or (= (* py_1_1 py_2_1) 1)(= (* px_2_0 px_2_1) 1))))
(imp (= t_2_2 0) (and (= (+ (abs py_1_2) (abs py_2_2) (abs px_2_1) (abs px_2_2)) 2) (or (= (* py_1_2 py_2_2) 1)(= (* px_2_1 px_2_2) 1))))
(imp (= t_2_3 0) (and (= (+ (abs py_1_3) (abs py_2_3) (abs px_2_2)) 2) (or (= (* py_1_3 py_2_3) 1))))
(imp (= t_3_0 0) (and (= (+ (abs py_2_0) (abs px_3_0)) 2) (or )))
(imp (= t_3_1 0) (and (= (+ (abs py_2_1) (abs px_3_0) (abs px_3_1)) 2) (or (= (* px_3_0 px_3_1) 1))))
(imp (= t_3_2 0) (and (= (+ (abs py_2_2) (abs px_3_1) (abs px_3_2)) 2) (or (= (* px_3_1 px_3_2) 1))))
(imp (= t_3_3 0) (and (= (+ (abs py_2_3) (abs px_3_2)) 2) (or )))
; Turn right constraints (t=1)
(imp (= t_0_0 1) (and (= (+ (abs py_0_0) (abs px_0_0)) 2) (or (and (= py_0_0 -1) (= px_0_0 1)))))
(imp (= t_0_1 1) (and (= (+ (abs py_0_1) (abs px_0_0) (abs px_0_1)) 2) (or (and (= py_0_1 1) (= px_0_0 1))(and (= py_0_1 -1) (= px_0_1 1)))))
(imp (= t_0_2 1) (and (= (+ (abs py_0_2) (abs px_0_1) (abs px_0_2)) 2) (or (and (= py_0_2 1) (= px_0_1 1))(and (= py_0_2 -1) (= px_0_2 1)))))
(imp (= t_0_3 1) (and (= (+ (abs py_0_3) (abs px_0_2)) 2) (or (and (= py_0_3 1) (= px_0_2 1)))))
(imp (= t_1_0 1) (and (= (+ (abs py_0_0) (abs py_1_0) (abs px_1_0)) 2) (or (and (= py_0_0 -1) (= px_1_0 -1))(and (= py_1_0 -1) (= px_1_0 1)))))
(imp (= t_1_1 1) (and (= (+ (abs py_0_1) (abs py_1_1) (abs px_1_0) (abs px_1_1)) 2) (or (and (= py_0_1 1) (= px_1_0 -1))(and (= py_0_1 -1) (= px_1_1 -1))(and (= py_1_1 1) (= px_1_0 1))(and (= py_1_1 -1) (= px_1_1 1)))))
(imp (= t_1_2 1) (and (= (+ (abs py_0_2) (abs py_1_2) (abs px_1_1) (abs px_1_2)) 2) (or (and (= py_0_2 1) (= px_1_1 -1))(and (= py_0_2 -1) (= px_1_2 -1))(and (= py_1_2 1) (= px_1_1 1))(and (= py_1_2 -1) (= px_1_2 1)))))
(imp (= t_1_3 1) (and (= (+ (abs py_0_3) (abs py_1_3) (abs px_1_2)) 2) (or (and (= py_0_3 1) (= px_1_2 -1))(and (= py_1_3 1) (= px_1_2 1)))))
(imp (= t_2_0 1) (and (= (+ (abs py_1_0) (abs py_2_0) (abs px_2_0)) 2) (or (and (= py_1_0 -1) (= px_2_0 -1))(and (= py_2_0 -1) (= px_2_0 1)))))
(imp (= t_2_1 1) (and (= (+ (abs py_1_1) (abs py_2_1) (abs px_2_0) (abs px_2_1)) 2) (or (and (= py_1_1 1) (= px_2_0 -1))(and (= py_1_1 -1) (= px_2_1 -1))(and (= py_2_1 1) (= px_2_0 1))(and (= py_2_1 -1) (= px_2_1 1)))))
(imp (= t_2_2 1) (and (= (+ (abs py_1_2) (abs py_2_2) (abs px_2_1) (abs px_2_2)) 2) (or (and (= py_1_2 1) (= px_2_1 -1))(and (= py_1_2 -1) (= px_2_2 -1))(and (= py_2_2 1) (= px_2_1 1))(and (= py_2_2 -1) (= px_2_2 1)))))
(imp (= t_2_3 1) (and (= (+ (abs py_1_3) (abs py_2_3) (abs px_2_2)) 2) (or (and (= py_1_3 1) (= px_2_2 -1))(and (= py_2_3 1) (= px_2_2 1)))))
(imp (= t_3_0 1) (and (= (+ (abs py_2_0) (abs px_3_0)) 2) (or (and (= py_2_0 -1) (= px_3_0 -1)))))
(imp (= t_3_1 1) (and (= (+ (abs py_2_1) (abs px_3_0) (abs px_3_1)) 2) (or (and (= py_2_1 1) (= px_3_0 -1))(and (= py_2_1 -1) (= px_3_1 -1)))))
(imp (= t_3_2 1) (and (= (+ (abs py_2_2) (abs px_3_1) (abs px_3_2)) 2) (or (and (= py_2_2 1) (= px_3_1 -1))(and (= py_2_2 -1) (= px_3_2 -1)))))
(imp (= t_3_3 1) (and (= (+ (abs py_2_3) (abs px_3_2)) 2) (or (and (= py_2_3 1) (= px_3_2 -1)))))
; Line with same area
(imp (!= py_0_0 0) (= a_0_0 a_1_0))
(imp (!= px_0_0 0) (= a_0_0 a_0_1))
(imp (!= py_0_1 0) (= a_0_1 a_1_1))
(imp (!= px_0_1 0) (= a_0_1 a_0_2))
(imp (!= py_0_2 0) (= a_0_2 a_1_2))
(imp (!= px_0_2 0) (= a_0_2 a_0_3))
(imp (!= py_0_3 0) (= a_0_3 a_1_3))
(imp (!= py_1_0 0) (= a_1_0 a_2_0))
(imp (!= px_1_0 0) (= a_1_0 a_1_1))
(imp (!= py_1_1 0) (= a_1_1 a_2_1))
(imp (!= px_1_1 0) (= a_1_1 a_1_2))
(imp (!= py_1_2 0) (= a_1_2 a_2_2))
(imp (!= px_1_2 0) (= a_1_2 a_1_3))
(imp (!= py_1_3 0) (= a_1_3 a_2_3))
(imp (!= py_2_0 0) (= a_2_0 a_3_0))
(imp (!= px_2_0 0) (= a_2_0 a_2_1))
(imp (!= py_2_1 0) (= a_2_1 a_3_1))
(imp (!= px_2_1 0) (= a_2_1 a_2_2))
(imp (!= py_2_2 0) (= a_2_2 a_3_2))
(imp (!= px_2_2 0) (= a_2_2 a_2_3))
(imp (!= py_2_3 0) (= a_2_3 a_3_3))
(imp (!= px_3_0 0) (= a_3_0 a_3_1))
(imp (!= px_3_1 0) (= a_3_1 a_3_2))
(imp (!= px_3_2 0) (= a_3_2 a_3_3))
; Size 4x4
;# Area variables
; 1 1 1 2
; 3 1 1 2
; 3 2 2 2
; 3 3 3 3
;# Turn variables
; 2 0 1 2
; 3 3 1 0
; 0 3 0 1
; 1 0 0 2
;# Path variables
; +--+--+  +
;       |  |  
; +  +~~+  +
; !        |  
; +  +~~+~~+
; !           
; +~~+~~+~~+
; 
(not (and 
(= a_0_0 1)
(= t_0_0 2)
(= py_0_0 0)
(= px_0_0 1)
(= a_0_1 1)
(= t_0_1 0)
(= py_0_1 0)
(= px_0_1 1)
(= a_0_2 1)
(= t_0_2 1)
(= py_0_2 1)
(= px_0_2 0)
(= a_0_3 2)
(= t_0_3 2)
(= py_0_3 1)
(= a_1_0 3)
(= t_1_0 3)
(= py_1_0 (- 1))
(= px_1_0 0)
(= a_1_1 1)
(= t_1_1 3)
(= py_1_1 0)
(= px_1_1 (- 1))
(= a_1_2 1)
(= t_1_2 1)
(= py_1_2 0)
(= px_1_2 0)
(= a_1_3 2)
(= t_1_3 0)
(= py_1_3 1)
(= a_2_0 3)
(= t_2_0 0)
(= py_2_0 (- 1))
(= px_2_0 0)
(= a_2_1 2)
(= t_2_1 3)
(= py_2_1 0)
(= px_2_1 (- 1))
(= a_2_2 2)
(= t_2_2 0)
(= py_2_2 0)
(= px_2_2 (- 1))
(= a_2_3 2)
(= t_2_3 1)
(= py_2_3 0)
(= a_3_0 3)
(= t_3_0 1)
(= px_3_0 (- 1))
(= a_3_1 3)
(= t_3_1 0)
(= px_3_1 (- 1))
(= a_3_2 3)
(= t_3_2 0)
(= px_3_2 (- 1))
(= a_3_3 3)
(= t_3_3 2)
))
